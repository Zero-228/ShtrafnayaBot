<?php 
header('Content-type: text/plain');

ini_set('error_reporting', E_ALL);
ini_set('display_erroros', 1);
ini_set('display_startup_erroros', 1);


require 'conf.php';
require 'functions.php';

/*========================–ü–µ—Ä–µ—Ö–≤–∞—Ç –¥–∞–Ω–Ω—ã—Ö==========================*/

$data = file_get_contents('php://input');
$data = json_decode($data, true);

writeLogFile($data, true);
//echo file_get_contents(__DIR__."/message.txt");
//echo $data;

$isReply = false;
$reply_to; $reply_to_id; $reply_message_id; 

$whisper = file_get_contents("/home4/zerobots/public_html/temp/whisper.txt", true);

if(!empty($data['message']['text'])){
	$text = $data['message']['text']; 
	$message_id = $data['message']['message_id'];
	$username = $data['message']['from']['username'];
	$type = $data['message']['chat']['type'];
	$user_id = $data['message']['from']['id'];
	if($type == 'group'){
		$chat_id = $data['message']['chat']['id'];
		$chat_title = $data['message']['chat']['title'];
	}
	if(!empty($data['message']['reply_to_message'])){
		$isReply = true;
		$reply_to = $data['message']['reply_to_message']['from']['username'];
		$reply_to_id = $data['message']['reply_to_message']['from']['id'];
		$reply_message_id = $data['message']['reply_to_message']['message_id'];
	}
	if (!empty($data['message']['entities'])) {
		$type = $data['message']['entities']['0']['type'];
	}
	

/*===================–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ë–î=====================*/	

	if ($isReply) {
		$message = mysqli_query($dbCon, "INSERT INTO messages VALUES ('$message_id', '$type', '$text', '$username', '$reply_to', '$reply_to_id', '$reply_message_id', '$timeNow')");		
	}
	else{
		$message = mysqli_query($dbCon, "INSERT INTO messages VALUES ('$message_id', '$type', '$text', '$username', NULL, NULL, NULL, '$timeNow')");
	}
	if (checkUser($user_id)!=false) {
		$updateUser = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id = '$user_id'");
		$updateUser = $updateUser->fetch_array();
		$lastMsgTime = $updateUser['lastMsg'];
		$msgToBot = $updateUser['msgToBot'];
		$msgToBot++;
		$updateDB = mysqli_query($dbCon, "UPDATE users SET msgToBot = '$msgToBot', lastMsg = '$timeNow' WHERE user_id = '$user_id'");
	}

/*========================–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞=========================*/


	if ($type == 'private' || $type == 'bot_command' || $type = 'mention') {
		if (checkUser($user_id)==false) {
			if ($text == "/start") {
				$insertNewUser = mysqli_query($dbCon, "INSERT INTO users VALUES ('$user_id', '$username', 'user', 0, 1, 0, '$timeNow', 0)");

				if ($insertNewUser == false) {
					sendMessage('Error', $user_id);
				}
				else{
					menuButtons($user_id,"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!\n–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!");
				}
			}
			else {
				sendMessage("–î–∞–≤–∞–π –ø–æ –ª—é–¥—Å–∫–∏\n–Ω–∞–ø–∏—à–∏ /start", $user_id);
			}
		}
		else{
			$dbUserInfo = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id = '$user_id'");
			$dbUserInfo = $dbUserInfo->fetch_array();
			menuButtons($user_id);
			$prevMsg = prevMsg($message_id);

			if ($type == 'bot_command') {
				switch ($text) {
					case '/start':
						delMsg($user_id, $message_id);
						sendMessage("–í–µ—á–µ—Ä–æ—á–µ—á–µ–∫—Å", $user_id);
						break;
					case '/help':
						delMsg($user_id, $message_id);
						sendMessage("https://telegra.ph/Spravka-po-botu-01-15", $user_id);
						break;
					case '/shtrafnaya':
						delMsg($user_id, $message_id);
						$users = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id != '$user_id'");

						foreach ($users as $user) {
							$callback = " shtraf ".$user['user_id'];
							$buttons[] = ['text' => $user['username'], 'callback_data' => $callback];
						}
						$cancelButton[] = ['text' => "‚ùå –û—Ç–º–µ–Ω–∞ ‚ùå", 'callback_data' => " cancel "];
						$buttons = array_merge($buttons, $cancelButton);

						inlineButtons($user_id, $buttons, "–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—á–µ—à—å –≤—ã–ø–∏—Å–∞—Ç—å —à—Ç—Ä–∞—Ñ–Ω—É—é :\n");
						exit();
					case '/approve':
						delMsg($user_id, $message_id);
						$users = mysqli_query($dbCon, "SELECT * FROM users");

						foreach ($users as $user) {
							$callback = " approve ".$user['user_id'];
							$buttons[] = ['text' => $user['username'], 'callback_data' => $callback];
						}
						$cancelButton[] = ['text' => "‚ùå –û—Ç–º–µ–Ω–∞ ‚ùå", 'callback_data' => " cancel "];
						$buttons = array_merge($buttons, $cancelButton);

						inlineButtons($user_id, $buttons, "–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—á–µ—à—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —à—Ç—Ä–∞—Ñ–Ω—É—é :\n");
						break;
					default:
						sendMessage("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞", $user_id);
						break;
				}
				exit();
			}
			/*if ($prevMsg == "/shtrafnaya") {

				$un = mb_strcut($text, 1);
				$unId = mysqli_query($dbCon, "SELECT user_id FROM users WHERE username = '$un'");
				$unIdNumRow = mysqli_num_rows($unId);
				delMsg($user_id, $message_id);
				if ($unIdNumRow == 1) {
					$unId = $unId->fetch_array();
					$unId = $unId[0];
					shtrafnaya($unId, $username, $user_id, $message_id);
					sendMessage("–¢—ã –≤—ã–ø–∏—Å–∞–ª —à—Ç—Ä–∞—Ñ–Ω—É—é ".$un, $user_id);
				}
				else {
					sendMessage("–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–∏–≥–ª–∞—Å–∏ –µ–≥–æ –≤ –±–æ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞)",$user_id);
				}
			}*/
			if ($text == "update") {
				delMsg($user_id, $message_id);
				menuButtons($user_id, "updated");
				exit();
			}
			if ($text == "| –°—Ç–∞—Ç—É—Å üìú |") {
				delMsg($user_id, $message_id);
				showStatus($user_id, $username, $lastMsgTime);
				exit();
			}
			if ($text == "| –í—ã–ø–∏—Å–∞—Ç—å —à—Ç—Ä–∞—Ñ–Ω—É—é üöÄ |") {
				$users = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id != '$user_id'");

				foreach ($users as $user) {
					$callback = " shtraf ".$user['user_id'];
					$buttons[] = ['text' => $user['username'], 'callback_data' => $callback];
				}
				$cancelButton[] = ['text' => "‚ùå –û—Ç–º–µ–Ω–∞ ‚ùå", 'callback_data' => " cancel "];
				$buttons = array_merge($buttons, $cancelButton);

				inlineButtons($user_id, $buttons, "–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—á–µ—à—å –≤—ã–ø–∏—Å–∞—Ç—å —à—Ç—Ä–∞—Ñ–Ω—É—é :\n");
				exit();
			}
			if ($text == "| –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ |") {
				$users = mysqli_query($dbCon, "SELECT * FROM users");

				foreach ($users as $user) {
					$callback = " approve ".$user['user_id'];
					$buttons[] = ['text' => $user['username'], 'callback_data' => $callback];
				}
				$cancelButton[] = ['text' => "‚ùå –û—Ç–º–µ–Ω–∞ ‚ùå", 'callback_data' => " cancel "];
				$buttons = array_merge($buttons, $cancelButton);

				inlineButtons($user_id, $buttons, "–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—á–µ—à—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —à—Ç—Ä–∞—Ñ–Ω—É—é :\n");
				exit();
			}
			if ($text == "| –ü–∏–Ω–≥ üì£ |") {
				$users = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id != '$user_id'");

				foreach ($users as $user) {
					$callback = " ping ".$user['user_id'];
					$buttons[] = ['text' => $user['username'], 'callback_data' => $callback];
				}
				$cancelButton[] = ['text' => "‚ùå –û—Ç–º–µ–Ω–∞ ‚ùå", 'callback_data' => " cancel "];
				$buttons = array_merge($buttons, $cancelButton);
				inlineButtons($user_id, $buttons, "–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –ø–∏–Ω–≥–∞–Ω—É—Ç—å :\n");
				exit();
			}
			if ($text == "| –£–ª—É—á—à–∏—Ç—å –±–æ—Ç–∞ üîß |") {

				$cancelButton[] = ['text' => "‚ùå –û—Ç–º–µ–Ω–∞ ‚ùå", 'callback_data' => " cancel "];

				inlineButtons($user_id, $cancelButton, "–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ : ");
				exit();
			}
			if ($prevMsg == "| –£–ª—É—á—à–∏—Ç—å –±–æ—Ç–∞ ") {
				if ($text != "–û—Ç–º–µ–Ω–∞" || $text != "–æ—Ç–º–µ–Ω–∞") {
					$insert = mysqli_query($dbCon, "INSERT INTO suggestions VALUES ('', '$text', '$username', '','$timeNow')");
					delMsg($user_id, $message_id-2);
					delMsg($user_id, $message_id-1);
					delMsg($user_id, $message_id);
					sendMessage("‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–æ, –∫–æ–º–∞–Ω–¥–∞ –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç –≤–∞—Å –∑–∞ —É–ª—É—á—à–µ–Ω–∏–µ –±–æ—Ç–∞)", $user_id);
					$currentNum = mysqli_query($dbCon, "SELECT * FROM suggestions WHERE hidden = '0'");
					$numRow = mysqli_num_rows($currentNum);
					sendMessage("‚úÖ –ü–æ—Å—Ç—É–ø–∏–ª–æ 1 –Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n–í—Å–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π : ".$numRow, TG_ADMIN_ID);
				}
				exit();
			}
			if (mb_stripos($text, '—á—Ç–æ —Ç—ã')!==false) {
				sendMessage("–¢–∞–∫ –∞ —Ç—ã —Ç–∞–º —Ç–∞–∫ —à–æ?", $user_id);
				exit();
			}
			/*if ($text == "test") {
				$textO = "–ù–∏–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π";
				$users = mysqli_query($dbCon, "SELECT * FROM users /*WHERE user_id != '$user_id'");
				$buttons = array();

				foreach ($users as $user) {
					$callback = " shtraf ".$user['user_id'];
					$buttons[] = ['text' => $user['username'], 'callback_data' => $callback];
				}

				inlineButtons($user_id, $buttons, $textO);
				exit();
			}*/
			if (mb_stripos($text, '—Ç—ã —à–æ') !== false) {
				$cutIn = stripos($text, '—Ç—ã —à–æ')+10;
				$word = mb_strcut($text, $cutIn);
				if ($word{strlen($word)-1} == '?') {
				   $word = substr($word,0,-1);
				}
				tiSho($user_id, $word);
			}

			/*============================Admin=================================*/

			if ($user_id == TG_ADMIN_ID) {
				if ($text == "–ü–æ–º–æ—â—å" || $text == "–ø–æ–º–æ—â—å" || $text == "/help") {
					sendMessage("–°—Ç–∞—Ç—É—Å - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—É–∂–æ–π —Å—Ç–∞—Ç—É—Å\n. —à–µ–ø–Ω—É—Ç—å [—Å–æ–æ–±—â–µ–Ω–∏–µ] - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω —Å–º—Å —á–µ—Ä–µ–∑ –±–æ—Ç\n. –≤—Å–µ–º [—Å–æ–æ–±—â–µ–Ω–∏–µ] - –º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞\n", $user_id);
				}
				if (mb_stripos($text, "—à–µ–ø–Ω—É—Ç—å")) {
					$whisper = mb_strcut($text, 16);
					$logFileName = __DIR__."/temp/whisper.txt";
					file_put_contents($logFileName, " ");
					file_put_contents($logFileName, print_r($whisper, true)."\r\n", FILE_APPEND);
					$textO = "–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—à–µ–Ω–∏–µ :";
					$users = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id != '$user_id'");

					foreach ($users as $user) {
						$callback = " msgTo ".$user['user_id'];
						$buttons[] = ['text' => $user['username'], 'callback_data' => $callback];
					}

					inlineButtons($user_id, $buttons, $textO);
					exit();
				}
				if (mb_stripos($text, "–≤—Å–µ–º")) {
					$broadcast = mb_strcut($text, 10);
					delMsg($user_id, $message_id);

					$users = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id != '$user_id'");
					foreach ($users as $user) {
						sendMessage("‚úâ –°–æ–æ–±—â–µ–Ω–∏–µ : \n=======================\n\n".$broadcast, $user['user_id']);
					}

					sendMessage("‚úâ –¢—ã —Å–∫–∞–∑–∞–ª : \n=======================\n".$broadcast."\n=======================\n\n–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.", $user_id);
					exit();
				}
				if ($text == "–°—Ç–∞—Ç—É—Å"){
					$textO = "–ß–µ–π —Å—Ç–∞—Ç—É—Å –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å?";
					$users = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id != '$user_id'");

					foreach ($users as $user) {
						$callback = " status ".$user['user_id'];
						$buttons[] = ['text' => $user['username'], 'callback_data' => $callback];
					}

					inlineButtons($user_id, $buttons, $textO);
					exit();
				}


			/*==================================================================*/
			}
		}

		exit();
	}
}
elseif (!empty($data['callback_query'])) {
	//debug('callback_query');
	$text = $data['callback_query']['data']; 
	$message_id = $data['callback_query']['message']['message_id'];
	$username = $data['callback_query']['from']['username'];
	$user_id = $data['callback_query']['from']['id'];
	$type = $data['callback_query']['message']['chat']['type'];

	$dbCon = mysqli_connect('198.57.247.160', 'zerobots_shtraf', 'Nikita13#', 'zerobots_shtrafnayaBot');
	

	if ($type == 'private') {
		if (mb_stripos($text, "shtraf") != 0) {
			(int)$user_to = mb_strcut($text, 8);
			$userToUn = mysqli_query($dbCon, "SELECT username FROM users WHERE user_id = '$user_to'");
			$userToUn = $userToUn->fetch_array();
			if (is_array($userToUn)) {
				$to_username = $userToUn['username'];
			}
			else {
				$to_username = $userToUn;
			}
			shtrafnaya($user_to, $username, $user_id, $message_id);
			delMsg($user_id, $message_id-1);
			delMsg($user_id, $message_id);
			sendMessage("üöÄ –¢—ã –≤—ã–ø–∏—Å–∞–ª —à—Ç—Ä–∞—Ñ–Ω—É—é ".$to_username, $user_id);
		}

		if (mb_stripos($text, "msgTo") != 0) {
			(int)$user_to = mb_strcut($text, 7);
			$userToUn = mysqli_query($dbCon, "SELECT username FROM users WHERE user_id = '$user_to'");
			$userToUn = $userToUn->fetch_array();
			if (is_array($userToUn)) {
				$to_username = $userToUn['username'];
			}
			else {
				$to_username = $userToUn;
			}
			delMsg($user_id, $message_id-1);
			delMsg($user_id, $message_id);
			sendMessage($whisper, $user_to);
			sendMessage("‚úâ –¢—ã —à–µ–ø–Ω—É–ª \n=======================\n".$whisper."=======================\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ".$to_username, $user_id);
		}

		if (mb_stripos($text, "status") != 0) {
			(int)$user_to = mb_strcut($text, 8);
			$userToUn = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id = '$user_to'");
			$userToUn = $userToUn->fetch_array();
			if (is_array($userToUn)) {
				$to_username = $userToUn['username'];
				$lastMsg = $userToUn['lastMsg'];

			}
			else {
				debug("Error");
			}
			showStatus($user_to, $to_username, $lastMsg, $user_id);
			delMsg($user_id, $message_id-1);
			delMsg($user_id, $message_id);
		}

		if (mb_stripos($text, "approve") != 0) {
			(int)$user_to = mb_strcut($text, 9);
			delMsg($user_id, $message_id-1);
			delMsg($user_id, $message_id);
			approveShtraf($user_id, $user_to);
		}

		if (mb_stripos($text, "cancel") != 0) {
			delMsg($user_id, $message_id-2);
			delMsg($user_id, $message_id-1);
			delMsg($user_id, $message_id);
			menuButtons($user_id, "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. üîÑ");
		}

		if (mb_stripos($text, "ping") != 0) {
			(int)$user_to = mb_strcut($text, 6);
			$userToUn = mysqli_query($dbCon, "SELECT * FROM users WHERE user_id = '$user_to'");
			$userToUn = $userToUn->fetch_array();
			if (is_array($userToUn)) {
				$to_username = $userToUn['username'];
			}
			else {
				debug("Error");
			}
			delMsg($user_id, $message_id-1);
			delMsg($user_id, $message_id);
			pingUser($user_to, $to_username, $user_id, $username, $message_id);
			sendMessage("–ü–∏–Ω–≥—É–µ–º ".$to_username." üåö", $user_id);
		}
	}
}
?>